plugins {
    id 'java'
    id 'io.qameta.allure' version '2.10.0'
    id 'io.freefair.lombok' version "6.6.3"
    id 'de.undercouch.download' version '4.0.4'
}

group 'restAssured'
version '1.0-SNAPSHOT'

sourceCompatibility = '11'
targetCompatibility = '11'

ext {
    allureVersion = '2.21.0'
    junitVersion = '5.9.1'
    swaggerCoverageVersion = '1.5.0'

    coverageDownloadUrl = "https://github.com/viclovsky/swagger-coverage/releases/download/${swaggerCoverageVersion}/swagger-coverage-${swaggerCoverageVersion}.zip"
    coverageCommandline = "./.coverage/swagger-coverage-commandline-${swaggerCoverageVersion}/bin/swagger-coverage-commandline"
    swaggerDownloadUrl = 'https://petstore.swagger.io/v2/swagger.json'

    coverageConfiguration = './coverage/configuration.json'
    coverageOutput = './swagger-coverage-output'
    coverageSwagger = './build/swagger.json'
}

repositories {
    mavenCentral()
    maven { url 'https://dl.bintray.com/viclovsky/maven/' }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

tasks.register('downloadSwagger', Download) {
    src "${swaggerDownloadUrl}"
    dest "${coverageSwagger}"
}

tasks.register('downloadCommandline', Download) {
    src "${coverageDownloadUrl}"
    dest file(".coverage/commandline.zip")
    doFirst {
        mkdir file(".coverage")
    }
}

tasks.register('unzipCommandline', Copy) {
    dependsOn("downloadCommandline")
    def zipFile = file(".coverage/commandline.zip")
    from zipTree(zipFile)
    into file(".coverage")
}

tasks.register('coverageReport', Exec) {
    dependsOn('downloadSwagger', 'unzipCommandline')

    commandLine "${coverageCommandline}", "-s", "${coverageSwagger}", "-i", "${coverageOutput}", '-c', "${coverageConfiguration}"
    workingDir '.'
}

dependencies {
    // Allure plugin for REST-Assured
    implementation "io.qameta.allure:allure-rest-assured:${allureVersion}"
    // Json Schema matcher
    implementation 'io.rest-assured:json-schema-validator:5.3.0'
    implementation 'io.rest-assured:rest-assured:5.3.0'
    //
    implementation "com.github.viclovsky:swagger-coverage-rest-assured:${swaggerCoverageVersion}"

    implementation 'com.google.code.gson:gson:2.8.9'
    implementation 'org.aspectj:aspectjweaver:1.9.2'
    implementation 'javax.xml.bind:jaxb-api:2.2.11'
    implementation('org.projectlombok:lombok:1.18.26')

    testImplementation('org.slf4j:slf4j-simple:1.7.30')
    testImplementation("org.junit.jupiter:junit-jupiter:${junitVersion}")
    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testImplementation("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
    testImplementation("org.assertj:assertj-core:3.11.1")
}

test {
    useJUnitPlatform()
    testLogging {
        events "PASSED", "FAILED", "SKIPPED"
    }
    systemProperty "allure.results.directory", "${buildDir}/allure-results"
}

allure {
    autoconfigure = true
    version = "${allureVersion}"

    useJUnit5 {
        version = "${allureVersion}"
    }
}